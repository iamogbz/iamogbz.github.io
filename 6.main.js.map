{"version":3,"sources":["webpack:///./src/components/GameOfLife/GameOfLife.styles.js","webpack:///./src/components/GameOfLife/GameOfLife.constants.js","webpack:///./src/components/GameOfLife/index.js","webpack:///./src/components/Link/Link.styles.js","webpack:///./src/components/Link/index.js","webpack:///./src/containers/Home/Home.styles.js","webpack:///./src/containers/Home/index.js"],"names":["Board","styled_components_browser_esm","div","_templateObject","Cell","_templateObject2","_ref2","x","_ref3","y","CELL_SIZE","_ref","n","GameOfLife_GameOfLife","GameOfLife","props","_this","_classCallCheck","this","isRunning","_possibleConstructorReturn","_getPrototypeOf","call","state","cells","runIteration","react_default","a","Component","size","board","range_default","rows","forEach","cols","Math","random","_this2","get_default","push","calculateNeighbours","neighbors","dy","dx","setState","_this3","interval","nextCells","livingCells","keepRunning","isEqual_default","prevCells","timeoutHandler","setTimeout","createElement","id","map","c","_extends","key","concat","domBoard","document","getElementById","clientHeight","clientWidth","_board","randomBoard","value","propTypes","prop_types_default","number","bool","defaultProps","components_GameOfLife","getBorderColor","borderColor","getBorderWidth","borderWidth","getButtonWidth","_ref4","buttonWidth","getButtonHeight","_ref5","buttonHeight","lineBorderPsuedoElem","AnimatedBorderedLinkWrapper","span","Link_styles_templateObject","fontSize","_ref8","fontColors","initial","_ref6","active","_ref7","hover","Link_Link","href","children","linkProps","pick_default","borderStyleProps","Link","to","string","node","isRequired","shape","components_Link","FullPageGrid","Object","styled_css_grid_esm","Home_styles_templateObject","CenteredCell","Home_styles_templateObject2","__webpack_exports__","routed","routes","describe","columns","width","height","style","backgroundColor","Home_extends","labs","$"],"mappings":"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","file":"6.main.js","sourcesContent":["import styled from \"styled-components\";\n\nimport {\n    BOARD_COLOR,\n    GRID_COLOR,\n    CELL_COLOR,\n    CELL_SIZE,\n    CELL_BORDER,\n} from \"./GameOfLife.constants\";\n\nexport const Board = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    margin: 0 auto;\n    background-color: ${BOARD_COLOR};\n    background-image: linear-gradient(\n            ${GRID_COLOR} ${CELL_BORDER}px,\n            transparent ${CELL_BORDER}px\n        ),\n        linear-gradient(\n            90deg,\n            ${GRID_COLOR} ${CELL_BORDER}px,\n            transparent ${CELL_BORDER}px\n        );\n    background-size: ${CELL_SIZE}px ${CELL_SIZE}px;\n    overflow: hidden;\n`;\n\nconst getHealth = ({ n }) => (n + 1) / 4;\n\nexport const Cell = styled.div`\n    position: absolute;\n    left: ${({ x }) => CELL_SIZE * x + CELL_BORDER}px;\n    top: ${({ y }) => CELL_SIZE * y + CELL_BORDER}px;\n    width: ${CELL_SIZE - CELL_BORDER * 2}px;\n    height: ${CELL_SIZE - CELL_BORDER * 2}px;\n    background-color: ${CELL_COLOR};\n    border-radius: 100%;\n    opacity: ${getHealth};\n`;\n","export const BOARD_ID = \"game-of-life-board\";\nexport const BOARD_COLOR = \"#000\";\nexport const GRID_COLOR = \"#111\";\nexport const CELL_COLOR = \"#fff\";\nexport const CELL_BORDER = 1;\nexport const CELL_SIZE = 20;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEqual from \"lodash/isEqual\";\nimport range from \"lodash/range\";\nimport get from \"lodash/get\";\n\nimport { BOARD_ID, CELL_SIZE } from \"./GameOfLife.constants\";\nimport { Board, Cell } from \"./GameOfLife.styles\";\n\nclass GameOfLife extends React.Component {\n    static propTypes = {\n        interval: PropTypes.number,\n        isRunning: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        interval: 100,\n        isRunning: true,\n    };\n\n    constructor(props) {\n        super(props);\n        const { isRunning } = this.props;\n        this.state = {\n            cells: [],\n            isRunning,\n        };\n        this.runIteration();\n    }\n\n    get size() {\n        const domBoard = document.getElementById(BOARD_ID);\n        if (!domBoard) {\n            return null;\n        }\n        return {\n            rows: domBoard.clientHeight / CELL_SIZE,\n            cols: domBoard.clientWidth / CELL_SIZE,\n        };\n    }\n\n    get board() {\n        if (!this._board) {\n            this._board = this.randomBoard();\n        }\n        return this._board;\n    }\n\n    set board(value) {\n        this._board = value;\n    }\n\n    randomBoard() {\n        const { size } = this;\n        if (!size) {\n            return null;\n        }\n        const board = [];\n        range(0, size.rows).forEach(y => {\n            board[y] = [];\n            range(0, size.cols).forEach(x => {\n                board[y][x] = Math.random() > 0.8;\n            });\n        });\n        return board;\n    }\n\n    livingCells() {\n        const cells = [];\n        const { size } = this;\n        range(0, size.rows).forEach(y => {\n            range(0, size.cols).forEach(x => {\n                if (get(this.board, [y, x], false)) {\n                    cells.push({ x, y, n: this.calculateNeighbours(x, y) });\n                }\n            });\n        });\n        return cells;\n    }\n\n    calculateNeighbours(x, y) {\n        let neighbors = 0;\n        const { board } = this;\n        range(-1, 2).forEach(dy => {\n            range(-1, 2).forEach(dx => {\n                if (\n                    !(dx === 0 && dy === 0) &&\n                    get(board, [y + dy, x + dx], false)\n                ) {\n                    neighbors += 1;\n                }\n            });\n        });\n        return neighbors;\n    }\n\n    startRunning() {\n        this.setState({ isRunning: true });\n        this.runIteration();\n    }\n\n    stopRunning() {\n        this.setState({ isRunning: false });\n    }\n\n    runIteration() {\n        const { isRunning } = this.state;\n        if (!isRunning) {\n            delete this.timeoutHandler;\n            return;\n        }\n        const {\n            size,\n            props: { interval },\n        } = this;\n        if (size) {\n            const board = [];\n            range(0, size.rows).forEach(y => {\n                board[y] = [];\n                range(0, size.cols).forEach(x => {\n                    const neighbors = this.calculateNeighbours(x, y);\n                    board[y][x] =\n                        neighbors === 3 ||\n                        (neighbors === 2 && get(this.board, [y, x], false));\n                });\n            });\n            this.board = board;\n            const nextCells = this.livingCells();\n            const keepRunning = !isEqual(nextCells, this.prevCells);\n            const { cells } = this.state;\n            this.prevCells = cells;\n            this.setState({ cells: nextCells, isRunning: keepRunning });\n        }\n        this.timeoutHandler = setTimeout(() => {\n            this.runIteration();\n        }, interval);\n    }\n\n    render() {\n        const { cells } = this.state;\n        return (\n            <Board id={BOARD_ID}>\n                {cells.map(c => <Cell key={`${c.x},${c.y}`} {...c} />)}\n            </Board>\n        );\n    }\n}\n\nexport default GameOfLife;\n","import styled from \"styled-components\";\n\nconst animTime = \"0.1s\";\nconst getFontSize = ({ fontSize }) => `${fontSize}pt`;\nconst getBorderColor = ({ borderColor }) => `${borderColor}`;\nconst getBorderWidth = ({ borderWidth }) => `${borderWidth}px`;\nconst getButtonWidth = ({ buttonWidth }) => `${buttonWidth}px`;\nconst getButtonHeight = ({ buttonHeight }) => `${buttonHeight}px`;\nconst getActiveColor = ({ fontColors: { active } }) => active;\nconst getHoverColor = ({ fontColors: { hover } }) => hover;\nconst getInitialColor = ({ fontColors: { initial } }) => initial;\n\nconst lineBorderPsuedoElem = props => `\n    content: \"\";\n    position: absolute;\n    transition: ease ${animTime} all;\n    width: ${getButtonWidth(props)};\n`;\n\nexport const AnimatedBorderedLinkWrapper = styled.span`\na {\n    text-transform: uppercase;\n    text-decoration: none;\n    font-size: ${getFontSize};\n\n    justify-content: center;\n    align-items: center;\n    display: inline-flex;\n    margin: calc(${getBorderWidth} * 2);\n    width: ${getButtonWidth};\n    height: ${getButtonHeight};\n    font-weight: bold;\n    color: ${getInitialColor};\n    margin: 0;\n    padding: 0;\n    position: relative;\n\n    background-repeat: no-repeat;\n    background-size: 50% ${getBorderWidth};\n    background-position: bottom;\n    background-image: linear-gradient(\n        90deg,\n        ${getBorderColor} 0%,\n        ${getBorderColor} 100%\n    );\n    transition: ${animTime} all ease;\n    transition-delay: calc(${animTime} * 2);\n    \n    &:active {\n        color: ${getActiveColor};\n        background-color: ${getBorderColor};\n    }\n\n    &:hover {\n        color: ${getHoverColor};\n        background-size: 100% ${getBorderWidth};\n        transition-delay: 0s;\n    }\n\n    /* side borders */\n    &::before {\n        ${lineBorderPsuedoElem}\n        transition-delay: ${animTime};\n        width: calc(${getButtonWidth} - ${getBorderWidth} * 2);\n        border-left: solid ${getBorderWidth} ${getBorderColor};\n        border-right: solid ${getBorderWidth} ${getBorderColor};\n        height: 0;\n        bottom: 0;\n    }\n\n    &:hover::before {\n        transition-delay: ${animTime};\n        height: ${getButtonHeight};\n    }\n\n    /* top border */\n    &::after {\n        ${lineBorderPsuedoElem}\n        transition-delay: 0s;\n        border-left: solid 0 ${getBorderColor};\n        border-right: solid 0 ${getBorderColor};\n        height: ${getBorderWidth};\n        top: 0;\n        left: 0;\n    }\n\n    &:hover::after {\n        transition-delay: calc(${animTime} * 2);\n        width: 0;\n        border-width: calc(${getButtonWidth} / 2);\n    }\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as L } from \"react-router-dom\";\nimport pick from \"lodash/pick\";\n\nimport { AnimatedBorderedLinkWrapper } from \"./Link.styles\";\n\nfunction Link(props) {\n    const { href, children } = props;\n    const linkProps = pick(props, [\"children\", \"href\", \"to\"]);\n    const borderStyleProps = pick(props, [\n        \"borderColor\",\n        \"borderWidth\",\n        \"buttonWidth\",\n        \"buttonHeight\",\n        \"fontColors\",\n        \"fontSize\",\n    ]);\n    return (\n        <AnimatedBorderedLinkWrapper {...borderStyleProps}>\n            {href ? <a {...linkProps}>{children}</a> : <L {...linkProps} />}\n        </AnimatedBorderedLinkWrapper>\n    );\n}\n\nLink.propTypes = {\n    /** If specified react router Link is user */\n    to: PropTypes.string,\n    /** If specified native html a link is used */\n    href: PropTypes.string,\n    /** HTML element content */\n    children: PropTypes.node.isRequired,\n    /** CSS border color */\n    borderColor: PropTypes.string,\n    /** CSS border thickness */\n    borderWidth: PropTypes.number,\n    /** Link button width in px */\n    buttonWidth: PropTypes.number,\n    /** Link button height in px */\n    buttonHeight: PropTypes.number,\n    /** Link colors in various contexts */\n    fontColors: PropTypes.shape({\n        active: PropTypes.string,\n        hover: PropTypes.string,\n        initial: PropTypes.string,\n    }),\n    /** Link font size in pt */\n    fontSize: PropTypes.number,\n};\n\nLink.defaultProps = {\n    to: null,\n    href: null,\n    borderColor: \"black\",\n    borderWidth: 8,\n    buttonWidth: 128,\n    buttonHeight: 64,\n    fontColors: {\n        active: \"white\",\n        hover: \"#2386F1\",\n        initial: \"black\",\n    },\n    fontSize: 18,\n};\n\nexport default Link;\n","import styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\n\nexport const FullPageGrid = styled(Grid)`\n    height: 100%;\n    width: 100%;\n`;\n\nexport const CenteredCell = styled(Cell)`\n    display: flex;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    justify-self: stretch;\n`;\n","import React from \"react\";\n\nimport GameOfLife from \"components/GameOfLife\";\nimport Link from \"components/Link\";\nimport appRoutes from \"containers/App/routes\";\nimport { FullPageGrid, CenteredCell } from \"./Home.styles\";\n\nexport default function() {\n    const routed = appRoutes.describe();\n    const linkProps = {\n        buttonWidth: 256,\n        buttonHeight: 80,\n        fontSize: 32,\n    };\n    return (\n        <FullPageGrid columns={3} rows={3}>\n            <CenteredCell\n                width={3}\n                height={2}\n                style={{ backgroundColor: \"black\" }}\n            >\n                <GameOfLife />\n            </CenteredCell>\n            <CenteredCell>\n                <Link\n                    {...linkProps}\n                    href=\"https://github.com/iamogbz/iamogbz.github.io\"\n                >\n                    Source\n                </Link>\n            </CenteredCell>\n            <CenteredCell>\n                <Link {...linkProps} to={routed.labs.$}>\n                    Labs\n                </Link>\n            </CenteredCell>\n            <CenteredCell>\n                <Link {...linkProps} href=\"http://emmanuel.ogbizi.com\">\n                    Profile\n                </Link>\n            </CenteredCell>\n        </FullPageGrid>\n    );\n}\n"],"sourceRoot":""}