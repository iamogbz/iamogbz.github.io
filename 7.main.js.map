{"version":3,"sources":["webpack:///./src/components/Link/Link.styles.js","webpack:///./src/components/Link/index.js","webpack:///./src/components/GameOfLife/GameOfLife.styles.js","webpack:///./src/components/GameOfLife/GameOfLife.constants.js","webpack:///./src/components/GameOfLife/index.js","webpack:///./src/containers/Home/Home.styles.js","webpack:///./src/containers/Home/index.js"],"names":["getBorderColor","_ref2","borderColor","concat","getBorderWidth","_ref3","borderWidth","getButtonWidth","_ref4","buttonWidth","getButtonHeight","_ref5","buttonHeight","lineBorderPsuedoElem","props","AnimatedBorderedLinkWrapper","span","_templateObject","_ref","fontSize","_ref8","fontColors","initial","_ref6","active","_ref7","hover","Link_Link","href","children","linkProps","pick_default","borderStyleProps","react_default","a","createElement","Link","propTypes","to","prop_types_default","string","node","isRequired","number","shape","defaultProps","__webpack_exports__","Board","styled_components_browser_esm","div","Cell","_templateObject2","x","y","CELL_SIZE","n","GameOfLife_GameOfLife","GameOfLife","_this","_classCallCheck","this","isRunning","_possibleConstructorReturn","_getPrototypeOf","call","state","cells","runIteration","Component","size","board","range_default","rows","forEach","cols","Math","random","_this2","get_default","push","calculateNeighbours","neighbors","dy","dx","setState","_this3","interval","nextCells","livingCells","keepRunning","isEqual_default","prevCells","timeoutHandler","setTimeout","id","map","c","_extends","key","domBoard","document","getElementById","clientHeight","clientWidth","_board","randomBoard","value","bool","components_GameOfLife","FullPageGrid","Object","styled_css_grid_esm","Home_styles_templateObject","CenteredCell","Home_styles_templateObject2","routed","routes","describe","columns","width","height","style","backgroundColor","Home_extends","labs","$"],"mappings":"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","file":"7.main.js","sourcesContent":["import styled from \"styled-components\";\n\nconst animTime = \"0.1s\";\nconst getFontSize = ({ fontSize }) => `${fontSize}pt`;\nconst getBorderColor = ({ borderColor }) => `${borderColor}`;\nconst getBorderWidth = ({ borderWidth }) => `${borderWidth}px`;\nconst getButtonWidth = ({ buttonWidth }) => `${buttonWidth}px`;\nconst getButtonHeight = ({ buttonHeight }) => `${buttonHeight}px`;\nconst getActiveColor = ({ fontColors: { active } }) => active;\nconst getHoverColor = ({ fontColors: { hover } }) => hover;\nconst getInitialColor = ({ fontColors: { initial } }) => initial;\n\nconst lineBorderPsuedoElem = props => `\n    content: \"\";\n    position: absolute;\n    transition: ease ${animTime} all;\n    width: ${getButtonWidth(props)};\n`;\n\nexport const AnimatedBorderedLinkWrapper = styled.span`\na {\n    text-transform: uppercase;\n    text-decoration: none;\n    font-size: ${getFontSize};\n\n    justify-content: center;\n    align-items: center;\n    display: inline-flex;\n    margin: calc(${getBorderWidth} * 2);\n    width: ${getButtonWidth};\n    height: ${getButtonHeight};\n    font-weight: bold;\n    color: ${getInitialColor};\n    margin: 0;\n    padding: 0;\n    position: relative;\n\n    background-repeat: no-repeat;\n    background-size: 50% ${getBorderWidth};\n    background-position: bottom;\n    background-image: linear-gradient(\n        90deg,\n        ${getBorderColor} 0%,\n        ${getBorderColor} 100%\n    );\n    transition: ${animTime} all ease;\n    transition-delay: calc(${animTime} * 2);\n    \n    &:active {\n        color: ${getActiveColor};\n        background-color: ${getBorderColor};\n    }\n\n    &:hover {\n        color: ${getHoverColor};\n        background-size: 100% ${getBorderWidth};\n        transition-delay: 0s;\n    }\n\n    /* side borders */\n    &::before {\n        ${lineBorderPsuedoElem}\n        transition-delay: ${animTime};\n        width: calc(${getButtonWidth} - ${getBorderWidth} * 2);\n        border-left: solid ${getBorderWidth} ${getBorderColor};\n        border-right: solid ${getBorderWidth} ${getBorderColor};\n        height: 0;\n        bottom: 0;\n    }\n\n    &:hover::before {\n        transition-delay: ${animTime};\n        height: ${getButtonHeight};\n    }\n\n    /* top border */\n    &::after {\n        ${lineBorderPsuedoElem}\n        transition-delay: 0s;\n        border-left: solid 0 ${getBorderColor};\n        border-right: solid 0 ${getBorderColor};\n        height: ${getBorderWidth};\n        top: 0;\n        left: 0;\n    }\n\n    &:hover::after {\n        transition-delay: calc(${animTime} * 2);\n        width: 0;\n        border-width: calc(${getButtonWidth} / 2);\n    }\n}\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link as L } from \"react-router-dom\";\nimport pick from \"lodash/pick\";\n\nimport { AnimatedBorderedLinkWrapper } from \"./Link.styles\";\n\nfunction Link(props) {\n    const { href, children } = props;\n    const linkProps = pick(props, [\"children\", \"href\", \"to\"]);\n    const borderStyleProps = pick(props, [\n        \"borderColor\",\n        \"borderWidth\",\n        \"buttonWidth\",\n        \"buttonHeight\",\n        \"fontColors\",\n        \"fontSize\",\n    ]);\n    return (\n        <AnimatedBorderedLinkWrapper {...borderStyleProps}>\n            {href ? <a {...linkProps}>{children}</a> : <L {...linkProps} />}\n        </AnimatedBorderedLinkWrapper>\n    );\n}\n\nLink.propTypes = {\n    /** If specified react router Link is user */\n    to: PropTypes.string,\n    /** If specified native html a link is used */\n    href: PropTypes.string,\n    /** HTML element content */\n    children: PropTypes.node.isRequired,\n    /** CSS border color */\n    borderColor: PropTypes.string,\n    /** CSS border thickness */\n    borderWidth: PropTypes.number,\n    /** Link button width in px */\n    buttonWidth: PropTypes.number,\n    /** Link button height in px */\n    buttonHeight: PropTypes.number,\n    /** Link colors in various contexts */\n    fontColors: PropTypes.shape({\n        active: PropTypes.string,\n        hover: PropTypes.string,\n        initial: PropTypes.string,\n    }),\n    /** Link font size in pt */\n    fontSize: PropTypes.number,\n};\n\nLink.defaultProps = {\n    to: null,\n    href: null,\n    borderColor: \"black\",\n    borderWidth: 8,\n    buttonWidth: 128,\n    buttonHeight: 64,\n    fontColors: {\n        active: \"white\",\n        hover: \"#2386F1\",\n        initial: \"black\",\n    },\n    fontSize: 18,\n};\n\nexport default Link;\n","import styled from \"styled-components\";\n\nimport {\n    BOARD_COLOR,\n    GRID_COLOR,\n    CELL_COLOR,\n    CELL_SIZE,\n    CELL_BORDER,\n} from \"./GameOfLife.constants\";\n\nexport const Board = styled.div`\n    width: 100%;\n    height: 100%;\n    position: relative;\n    margin: 0 auto;\n    background-color: ${BOARD_COLOR};\n    background-image: linear-gradient(\n            ${GRID_COLOR} ${CELL_BORDER}px,\n            transparent ${CELL_BORDER}px\n        ),\n        linear-gradient(\n            90deg,\n            ${GRID_COLOR} ${CELL_BORDER}px,\n            transparent ${CELL_BORDER}px\n        );\n    background-size: ${CELL_SIZE}px ${CELL_SIZE}px;\n    overflow: hidden;\n`;\n\nconst getHealth = ({ n }) => (n + 1) / 4;\n\nexport const Cell = styled.div`\n    position: absolute;\n    left: ${({ x }) => CELL_SIZE * x + CELL_BORDER}px;\n    top: ${({ y }) => CELL_SIZE * y + CELL_BORDER}px;\n    width: ${CELL_SIZE - CELL_BORDER * 2}px;\n    height: ${CELL_SIZE - CELL_BORDER * 2}px;\n    background-color: ${CELL_COLOR};\n    border-radius: 100%;\n    opacity: ${getHealth};\n`;\n","export const BOARD_ID = \"game-of-life-board\";\nexport const BOARD_COLOR = \"#000\";\nexport const GRID_COLOR = \"#111\";\nexport const CELL_COLOR = \"#fff\";\nexport const CELL_BORDER = 1;\nexport const CELL_SIZE = 20;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport isEqual from \"lodash/isEqual\";\nimport range from \"lodash/range\";\nimport get from \"lodash/get\";\n\nimport { BOARD_ID, CELL_SIZE } from \"./GameOfLife.constants\";\nimport { Board, Cell } from \"./GameOfLife.styles\";\n\nclass GameOfLife extends React.Component {\n    static propTypes = {\n        interval: PropTypes.number,\n        isRunning: PropTypes.bool,\n    };\n\n    static defaultProps = {\n        interval: 100,\n        isRunning: true,\n    };\n\n    constructor(props) {\n        super(props);\n        const { isRunning } = this.props;\n        this.state = {\n            cells: [],\n            isRunning,\n        };\n        this.runIteration();\n    }\n\n    get size() {\n        const domBoard = document.getElementById(BOARD_ID);\n        if (!domBoard) {\n            return null;\n        }\n        return {\n            rows: domBoard.clientHeight / CELL_SIZE,\n            cols: domBoard.clientWidth / CELL_SIZE,\n        };\n    }\n\n    get board() {\n        if (!this._board) {\n            this._board = this.randomBoard();\n        }\n        return this._board;\n    }\n\n    set board(value) {\n        this._board = value;\n    }\n\n    randomBoard() {\n        const { size } = this;\n        if (!size) {\n            return null;\n        }\n        const board = [];\n        range(0, size.rows).forEach(y => {\n            board[y] = [];\n            range(0, size.cols).forEach(x => {\n                board[y][x] = Math.random() > 0.8;\n            });\n        });\n        return board;\n    }\n\n    livingCells() {\n        const cells = [];\n        const { size } = this;\n        range(0, size.rows).forEach(y => {\n            range(0, size.cols).forEach(x => {\n                if (get(this.board, [y, x], false)) {\n                    cells.push({ x, y, n: this.calculateNeighbours(x, y) });\n                }\n            });\n        });\n        return cells;\n    }\n\n    calculateNeighbours(x, y) {\n        let neighbors = 0;\n        const { board } = this;\n        range(-1, 2).forEach(dy => {\n            range(-1, 2).forEach(dx => {\n                if (\n                    !(dx === 0 && dy === 0) &&\n                    get(board, [y + dy, x + dx], false)\n                ) {\n                    neighbors += 1;\n                }\n            });\n        });\n        return neighbors;\n    }\n\n    startRunning() {\n        this.setState({ isRunning: true });\n        this.runIteration();\n    }\n\n    stopRunning() {\n        this.setState({ isRunning: false });\n    }\n\n    runIteration() {\n        const { isRunning } = this.state;\n        if (!isRunning) {\n            delete this.timeoutHandler;\n            return;\n        }\n        const {\n            size,\n            props: { interval },\n        } = this;\n        if (size) {\n            const board = [];\n            range(0, size.rows).forEach(y => {\n                board[y] = [];\n                range(0, size.cols).forEach(x => {\n                    const neighbors = this.calculateNeighbours(x, y);\n                    board[y][x] =\n                        neighbors === 3 ||\n                        (neighbors === 2 && get(this.board, [y, x], false));\n                });\n            });\n            this.board = board;\n            const nextCells = this.livingCells();\n            const keepRunning = !isEqual(nextCells, this.prevCells);\n            const { cells } = this.state;\n            this.prevCells = cells;\n            this.setState({ cells: nextCells, isRunning: keepRunning });\n        }\n        this.timeoutHandler = setTimeout(() => {\n            this.runIteration();\n        }, interval);\n    }\n\n    render() {\n        const { cells } = this.state;\n        return (\n            <Board id={BOARD_ID}>\n                {cells.map(c => <Cell key={`${c.x},${c.y}`} {...c} />)}\n            </Board>\n        );\n    }\n}\n\nexport default GameOfLife;\n","import styled from \"styled-components\";\nimport { Grid, Cell } from \"styled-css-grid\";\n\nexport const FullPageGrid = styled(Grid)`\n    height: 100%;\n    width: 100%;\n`;\n\nexport const CenteredCell = styled(Cell)`\n    display: flex;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    justify-self: stretch;\n`;\n","import React from \"react\";\n\nimport GameOfLife from \"components/GameOfLife\";\nimport Link from \"components/Link\";\nimport appRoutes from \"containers/App/routes\";\nimport { FullPageGrid, CenteredCell } from \"./Home.styles\";\n\nexport default function() {\n    const routed = appRoutes.describe();\n    const linkProps = {\n        buttonWidth: 256,\n        buttonHeight: 80,\n        fontSize: 32,\n    };\n    return (\n        <FullPageGrid columns={3} rows={3}>\n            <CenteredCell\n                width={3}\n                height={2}\n                style={{ backgroundColor: \"black\" }}\n            >\n                <GameOfLife />\n            </CenteredCell>\n            <CenteredCell>\n                <Link\n                    {...linkProps}\n                    href=\"https://github.com/iamogbz/iamogbz.github.io\"\n                >\n                    Source\n                </Link>\n            </CenteredCell>\n            <CenteredCell>\n                <Link {...linkProps} to={routed.labs.$}>\n                    Labs\n                </Link>\n            </CenteredCell>\n            <CenteredCell>\n                <Link {...linkProps} href=\"http://emmanuel.ogbizi.com\">\n                    Profile\n                </Link>\n            </CenteredCell>\n        </FullPageGrid>\n    );\n}\n"],"sourceRoot":""}